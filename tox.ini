[tox]
envlist =
    py{37,38,39}-django32-{mysql,postgres,sqlite}
    py{38,39}-django40-{mysql,postgres,sqlite}
    py{38,39}-django41-{mysql,postgres,sqlite}
toxworkdir=/tmp/.tox

[testenv]
commands = pytest -s --cov --cov-append actstream/ runtests/testapp runtests/testapp_nested/

deps =
    django-rest-framework
    rest-framework-generic-relations
    drf-spectacular
    coverage
    pytest
    pytest-cov
    pytest-django
    coverage>=4.5.1
    django32: Django>=3.2,<4.0
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    mysql: mysqlclient>=2.0.0
    mysql: django-mysql>=2.4.1
    postgres: psycopg2-binary>=2.8

setenv =
    ; GITHUB_WORKFLOW=true ; Set this to force enable mysql/postgres dbs
    mysql: DATABASE_ENGINE=mysql
    postgres: DATABASE_ENGINE=postgresql

; Pass this to force enable mysql/postgres dbs
passenv = GITHUB_WORKFLOW MYSQL_HOST MYSQL_NAME MYSQL_USER MYSQL_PASSWORD MYSQL_PORT POSTGRES_HOST POSTGRES_NAME POSTGRES_PORT POSTGRES_USER POSTGRES_PASSWORD SQLITE_NAME

usedevelop = True

[testenv:ipdb]
deps = {[testenv]deps} ipdb ipython
commands = {[testenv]commands}  --pdb --pdbcls=IPython.terminal.debugger:TerminalPdb

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[travis:env]
DJANGO =
    4.0: django40
    3.2: django32
DATABASE =
    mysql: mysql
    postgresql: postgresql
    sqlite: sqlite

